{
  "{\"sourceRoot\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app\",\"filename\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app",
      "filename": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongoConnect = _interopRequireDefault(require(\"./database/mongoConnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\nvar port = 7600;\napp.post('/addData', function (req, res) {\n  var myData = {\n    \"name\": \"john\",\n    \"email\": \"j@j.com\"\n  };\n\n  _mongoConnect[\"default\"].prototype.postData('user', myData);\n});\napp.get('/', function (req, res) {\n  var out = _mongoConnect[\"default\"].prototype.getData('user');\n\n  res.send(out);\n});\napp.listen(port, function (err) {\n  console.log(\"server is running on port \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJwb3J0IiwicG9zdCIsInJlcSIsInJlcyIsIm15RGF0YSIsIm1vbmdvQ29ubmVjdCIsInByb3RvdHlwZSIsInBvc3REYXRhIiwiZ2V0Iiwib3V0IiwiZ2V0RGF0YSIsInNlbmQiLCJsaXN0ZW4iLCJlcnIiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUdBOzs7O0FBRkEsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBQ0EsSUFBTUMsSUFBSSxHQUFHLElBQWI7QUFHQUQsR0FBRyxDQUFDRSxJQUFKLENBQVMsVUFBVCxFQUFvQixVQUFDQyxHQUFELEVBQUtDLEdBQUwsRUFBYTtBQUM3QixNQUFJQyxNQUFNLEdBQUc7QUFBQyxZQUFPLE1BQVI7QUFBZSxhQUFRO0FBQXZCLEdBQWI7O0FBQ0FDLDJCQUFhQyxTQUFiLENBQXVCQyxRQUF2QixDQUFnQyxNQUFoQyxFQUF1Q0gsTUFBdkM7QUFDSCxDQUhEO0FBS0FMLEdBQUcsQ0FBQ1MsR0FBSixDQUFRLEdBQVIsRUFBWSxVQUFDTixHQUFELEVBQUtDLEdBQUwsRUFBYTtBQUNyQixNQUFJTSxHQUFHLEdBQUdKLHlCQUFhQyxTQUFiLENBQXVCSSxPQUF2QixDQUErQixNQUEvQixDQUFWOztBQUNBUCxFQUFBQSxHQUFHLENBQUNRLElBQUosQ0FBU0YsR0FBVDtBQUNILENBSEQ7QUFNQVYsR0FBRyxDQUFDYSxNQUFKLENBQVdaLElBQVgsRUFBZ0IsVUFBQ2EsR0FBRCxFQUFPO0FBQ25CQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIscUNBQXlDZixJQUF6QztBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2F2aS9EZXNrdG9wL0NsYXNzZXMvQXByX05vZGVfbXJuZy9vb19ub2RlanMvY3JlYXRlLW5vZGUtYXBwL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3QgcG9ydCA9IDc2MDA7XG5pbXBvcnQgbW9uZ29Db25uZWN0IGZyb20gJy4vZGF0YWJhc2UvbW9uZ29Db25uZWN0JztcblxuYXBwLnBvc3QoJy9hZGREYXRhJywocmVxLHJlcykgPT4ge1xuICAgIHZhciBteURhdGEgPSB7XCJuYW1lXCI6XCJqb2huXCIsXCJlbWFpbFwiOlwiakBqLmNvbVwifVxuICAgIG1vbmdvQ29ubmVjdC5wcm90b3R5cGUucG9zdERhdGEoJ3VzZXInLG15RGF0YSlcbn0pO1xuXG5hcHAuZ2V0KCcvJywocmVxLHJlcykgPT4ge1xuICAgIGxldCBvdXQgPSBtb25nb0Nvbm5lY3QucHJvdG90eXBlLmdldERhdGEoJ3VzZXInKTtcbiAgICByZXMuc2VuZChvdXQpXG59KTtcblxuXG5hcHAubGlzdGVuKHBvcnQsKGVycik9PntcbiAgICBjb25zb2xlLmxvZyhgc2VydmVyIGlzIHJ1bm5pbmcgb24gcG9ydCAke3BvcnR9YClcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "port",
        "post",
        "req",
        "res",
        "myData",
        "mongoConnect",
        "prototype",
        "postData",
        "get",
        "out",
        "getData",
        "send",
        "listen",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AAGA;;;;AAFA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAG,IAAb;AAGAD,GAAG,CAACE,IAAJ,CAAS,UAAT,EAAoB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC7B,MAAIC,MAAM,GAAG;AAAC,YAAO,MAAR;AAAe,aAAQ;AAAvB,GAAb;;AACAC,2BAAaC,SAAb,CAAuBC,QAAvB,CAAgC,MAAhC,EAAuCH,MAAvC;AACH,CAHD;AAKAL,GAAG,CAACS,GAAJ,CAAQ,GAAR,EAAY,UAACN,GAAD,EAAKC,GAAL,EAAa;AACrB,MAAIM,GAAG,GAAGJ,yBAAaC,SAAb,CAAuBI,OAAvB,CAA+B,MAA/B,CAAV;;AACAP,EAAAA,GAAG,CAACQ,IAAJ,CAASF,GAAT;AACH,CAHD;AAMAV,GAAG,CAACa,MAAJ,CAAWZ,IAAX,EAAgB,UAACa,GAAD,EAAO;AACnBC,EAAAA,OAAO,CAACC,GAAR,qCAAyCf,IAAzC;AACH,CAFD",
      "sourceRoot": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src",
      "sourcesContent": [
        "import express from 'express';\nconst app = express();\nconst port = 7600;\nimport mongoConnect from './database/mongoConnect';\n\napp.post('/addData',(req,res) => {\n    var myData = {\"name\":\"john\",\"email\":\"j@j.com\"}\n    mongoConnect.prototype.postData('user',myData)\n});\n\napp.get('/',(req,res) => {\n    let out = mongoConnect.prototype.getData('user');\n    res.send(out)\n});\n\n\napp.listen(port,(err)=>{\n    console.log(`server is running on port ${port}`)\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555986356300
  },
  "{\"sourceRoot\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src/database\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app\",\"filename\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src/database/mongoConnect.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src/database",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app",
      "filename": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src/database/mongoConnect.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src/database/mongoConnect.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src/database/mongoConnect.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src/database",
        "sourceFileName": "mongoConnect.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar MongoClient = _mongodb[\"default\"].MongoClient;\nvar url = \"mongodb://127.0.0.1:27017\";\n\nvar maincall = function maincall(myObj) {\n  MongoClient.connect(url, function (err, db) {\n    if (err) throw err;\n    var dbo = db.db('apr_node_oo');\n    dbo.collection('user').insertOne(myObj, function (err) {\n      if (err) throw err;\n      console.log('data inserted');\n      db.close();\n    });\n  });\n};\n\nmaincall.prototype.postData = function (colName, myObj) {\n  MongoClient.connect(url, function (err, db) {\n    if (err) throw err;\n    var dbo = db.db('apr_node_oo');\n    dbo.collection(colName).insertOne(myObj, function (err) {\n      if (err) throw err;\n      console.log('data inserted');\n      db.close();\n    });\n  });\n};\n\nmaincall.prototype.putData = function (colName, query, myObj) {\n  MongoClient.connect(url, function (err, db) {\n    if (err) throw err;\n    var dbo = db.db('apr_node_oo');\n    dbo.collection(colName).update(query, myObj, function (err) {\n      if (err) throw err;\n      console.log('data updated');\n      db.close();\n    });\n  });\n};\n\nmaincall.prototype.deleteData = function (colName, query) {\n  MongoClient.connect(url, function (err, db) {\n    if (err) throw err;\n    var dbo = db.db('apr_node_oo');\n    dbo.collection(colName).deleteOne(query, function (err) {\n      if (err) throw err;\n      console.log('data updated');\n      db.close();\n    });\n  });\n};\n\nvar outres;\n\nmaincall.prototype.getData = function (colName) {\n  MongoClient.connect(url, function (err, db) {\n    if (err) throw err;\n    var dbo = db.db('apr_node_oo');\n    dbo.collection(colName).find({}).toArray(function (err, result) {\n      if (err) throw err;\n      outres = result;\n    });\n  });\n  return outres;\n};\n\nmodule.exports = maincall;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vbmdvQ29ubmVjdC5qcyJdLCJuYW1lcyI6WyJNb25nb0NsaWVudCIsIm1vbmdvZGIiLCJ1cmwiLCJtYWluY2FsbCIsIm15T2JqIiwiY29ubmVjdCIsImVyciIsImRiIiwiZGJvIiwiY29sbGVjdGlvbiIsImluc2VydE9uZSIsImNvbnNvbGUiLCJsb2ciLCJjbG9zZSIsInByb3RvdHlwZSIsInBvc3REYXRhIiwiY29sTmFtZSIsInB1dERhdGEiLCJxdWVyeSIsInVwZGF0ZSIsImRlbGV0ZURhdGEiLCJkZWxldGVPbmUiLCJvdXRyZXMiLCJnZXREYXRhIiwiZmluZCIsInRvQXJyYXkiLCJyZXN1bHQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0EsSUFBTUEsV0FBVyxHQUFHQyxvQkFBUUQsV0FBNUI7QUFDQSxJQUFNRSxHQUFHLEdBQUcsMkJBQVo7O0FBRUEsSUFBTUMsUUFBUSxHQUFHLFNBQVhBLFFBQVcsQ0FBQ0MsS0FBRCxFQUFXO0FBQ3hCSixFQUFBQSxXQUFXLENBQUNLLE9BQVosQ0FBb0JILEdBQXBCLEVBQXdCLFVBQUNJLEdBQUQsRUFBS0MsRUFBTCxFQUFZO0FBQ2hDLFFBQUdELEdBQUgsRUFBUSxNQUFNQSxHQUFOO0FBQ1IsUUFBSUUsR0FBRyxHQUFHRCxFQUFFLENBQUNBLEVBQUgsQ0FBTSxhQUFOLENBQVY7QUFDQUMsSUFBQUEsR0FBRyxDQUFDQyxVQUFKLENBQWUsTUFBZixFQUF1QkMsU0FBdkIsQ0FBaUNOLEtBQWpDLEVBQXVDLFVBQUNFLEdBQUQsRUFBUztBQUM1QyxVQUFHQSxHQUFILEVBQVEsTUFBTUEsR0FBTjtBQUNSSyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxlQUFaO0FBQ0FMLE1BQUFBLEVBQUUsQ0FBQ00sS0FBSDtBQUNILEtBSkQ7QUFLSCxHQVJEO0FBU0gsQ0FWRDs7QUFXQVYsUUFBUSxDQUFDVyxTQUFULENBQW1CQyxRQUFuQixHQUE4QixVQUFDQyxPQUFELEVBQVNaLEtBQVQs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InNvdXJjZVJvb3QiOiIvVXNlcnMvYXZpL0Rlc2t0b3AvQ2xhc3Nlcy9BcHJfTm9kZV9tcm5nL29vX25vZGVqcy9jcmVhdGUtbm9kZS1hcHAvc3JjL2RhdGFiYXNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvZGIgZnJvbSAnbW9uZ29kYic7XG5jb25zdCBNb25nb0NsaWVudCA9IG1vbmdvZGIuTW9uZ29DbGllbnQ7XG5jb25zdCB1cmwgPSBcIm1vbmdvZGI6Ly8xMjcuMC4wLjE6MjcwMTdcIjtcblxuY29uc3QgbWFpbmNhbGwgPSAobXlPYmopID0+IHtcbiAgICBNb25nb0NsaWVudC5jb25uZWN0KHVybCwoZXJyLGRiKSA9PiB7XG4gICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICB2YXIgZGJvID0gZGIuZGIoJ2Fwcl9ub2RlX29vJylcbiAgICAgICAgZGJvLmNvbGxlY3Rpb24oJ3VzZXInKS5pbnNlcnRPbmUobXlPYmosKGVycikgPT4ge1xuICAgICAgICAgICAgaWYoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnZGF0YSBpbnNlcnRlZCcpXG4gICAgICAgICAgICBkYi5jbG9zZSgpO1xuICAgICAgICB9KVxuICAgIH0pXG59XG5tYWluY2FsbC5wcm90b3R5cGUucG9zdERhdGEgPSAoY29sTmFtZSxteU9iaikgPT4ge1xuICAgIE1vbmdvQ2xpZW50LmNvbm5lY3QodXJsLChlcnIsZGIpID0+IHtcbiAgICAgICAgaWYoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgIHZhciBkYm8gPSBkYi5kYignYXByX25vZGVfb28nKVxuICAgICAgICBkYm8uY29sbGVjdGlvbihjb2xOYW1lKS5pbnNlcnRPbmUobXlPYmosKGVycikgPT4ge1xuICAgICAgICAgICAgaWYoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnZGF0YSBpbnNlcnRlZCcpXG4gICAgICAgICAgICBkYi5jbG9zZSgpO1xuICAgICAgICB9KVxuICAgIH0pXG59XG5cbm1haW5jYWxsLnByb3RvdHlwZS5wdXREYXRhID0gKGNvbE5hbWUscXVlcnksbXlPYmopID0+IHtcbiAgICBNb25nb0NsaWVudC5jb25uZWN0KHVybCwoZXJyLGRiKSA9PiB7XG4gICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICB2YXIgZGJvID0gZGIuZGIoJ2Fwcl9ub2RlX29vJylcbiAgICAgICAgZGJvLmNvbGxlY3Rpb24oY29sTmFtZSkudXBkYXRlKHF1ZXJ5LG15T2JqLChlcnIpID0+IHtcbiAgICAgICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2RhdGEgdXBkYXRlZCcpXG4gICAgICAgICAgICBkYi5jbG9zZSgpO1xuICAgICAgICB9KVxuICAgIH0pXG59XG5cbm1haW5jYWxsLnByb3RvdHlwZS5kZWxldGVEYXRhID0gKGNvbE5hbWUscXVlcnkpID0+IHtcbiAgICBNb25nb0NsaWVudC5jb25uZWN0KHVybCwoZXJyLGRiKSA9PiB7XG4gICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICB2YXIgZGJvID0gZGIuZGIoJ2Fwcl9ub2RlX29vJylcbiAgICAgICAgZGJvLmNvbGxlY3Rpb24oY29sTmFtZSkuZGVsZXRlT25lKHF1ZXJ5LChlcnIpID0+IHtcbiAgICAgICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2RhdGEgdXBkYXRlZCcpXG4gICAgICAgICAgICBkYi5jbG9zZSgpO1xuICAgICAgICB9KVxuICAgIH0pXG59XG5cbmxldCBvdXRyZXM7XG5tYWluY2FsbC5wcm90b3R5cGUuZ2V0RGF0YSA9IChjb2xOYW1lKSA9PiB7XG4gICAgTW9uZ29DbGllbnQuY29ubmVjdCh1cmwsKGVycixkYikgPT4ge1xuICAgICAgICBpZihlcnIpIHRocm93IGVycjtcbiAgICAgICAgdmFyIGRibyA9IGRiLmRiKCdhcHJfbm9kZV9vbycpXG4gICAgICAgIGRiby5jb2xsZWN0aW9uKGNvbE5hbWUpLmZpbmQoe30pLnRvQXJyYXkoKGVycixyZXN1bHQpID0+IHtcbiAgICAgICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICAgICAgb3V0cmVzID0gcmVzdWx0XG4gICAgICAgIH0pXG4gICAgfSlcblxuICAgIHJldHVybiBvdXRyZXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWFpbmNhbGwiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "mongoConnect.js"
      ],
      "names": [
        "MongoClient",
        "mongodb",
        "url",
        "maincall",
        "myObj",
        "connect",
        "err",
        "db",
        "dbo",
        "collection",
        "insertOne",
        "console",
        "log",
        "close",
        "prototype",
        "postData",
        "colName",
        "putData",
        "query",
        "update",
        "deleteData",
        "deleteOne",
        "outres",
        "getData",
        "find",
        "toArray",
        "result",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AACA,IAAMA,WAAW,GAAGC,oBAAQD,WAA5B;AACA,IAAME,GAAG,GAAG,2BAAZ;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxBJ,EAAAA,WAAW,CAACK,OAAZ,CAAoBH,GAApB,EAAwB,UAACI,GAAD,EAAKC,EAAL,EAAY;AAChC,QAAGD,GAAH,EAAQ,MAAMA,GAAN;AACR,QAAIE,GAAG,GAAGD,EAAE,CAACA,EAAH,CAAM,aAAN,CAAV;AACAC,IAAAA,GAAG,CAACC,UAAJ,CAAe,MAAf,EAAuBC,SAAvB,CAAiCN,KAAjC,EAAuC,UAACE,GAAD,EAAS;AAC5C,UAAGA,GAAH,EAAQ,MAAMA,GAAN;AACRK,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAL,MAAAA,EAAE,CAACM,KAAH;AACH,KAJD;AAKH,GARD;AASH,CAVD;;AAWAV,QAAQ,CAACW,SAAT,CAAmBC,QAAnB,GAA8B,UAACC,OAAD,EAASZ,KAAT,EAAmB;AAC7CJ,EAAAA,WAAW,CAACK,OAAZ,CAAoBH,GAApB,EAAwB,UAACI,GAAD,EAAKC,EAAL,EAAY;AAChC,QAAGD,GAAH,EAAQ,MAAMA,GAAN;AACR,QAAIE,GAAG,GAAGD,EAAE,CAACA,EAAH,CAAM,aAAN,CAAV;AACAC,IAAAA,GAAG,CAACC,UAAJ,CAAeO,OAAf,EAAwBN,SAAxB,CAAkCN,KAAlC,EAAwC,UAACE,GAAD,EAAS;AAC7C,UAAGA,GAAH,EAAQ,MAAMA,GAAN;AACRK,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAL,MAAAA,EAAE,CAACM,KAAH;AACH,KAJD;AAKH,GARD;AASH,CAVD;;AAYAV,QAAQ,CAACW,SAAT,CAAmBG,OAAnB,GAA6B,UAACD,OAAD,EAASE,KAAT,EAAed,KAAf,EAAyB;AAClDJ,EAAAA,WAAW,CAACK,OAAZ,CAAoBH,GAApB,EAAwB,UAACI,GAAD,EAAKC,EAAL,EAAY;AAChC,QAAGD,GAAH,EAAQ,MAAMA,GAAN;AACR,QAAIE,GAAG,GAAGD,EAAE,CAACA,EAAH,CAAM,aAAN,CAAV;AACAC,IAAAA,GAAG,CAACC,UAAJ,CAAeO,OAAf,EAAwBG,MAAxB,CAA+BD,KAA/B,EAAqCd,KAArC,EAA2C,UAACE,GAAD,EAAS;AAChD,UAAGA,GAAH,EAAQ,MAAMA,GAAN;AACRK,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAL,MAAAA,EAAE,CAACM,KAAH;AACH,KAJD;AAKH,GARD;AASH,CAVD;;AAYAV,QAAQ,CAACW,SAAT,CAAmBM,UAAnB,GAAgC,UAACJ,OAAD,EAASE,KAAT,EAAmB;AAC/ClB,EAAAA,WAAW,CAACK,OAAZ,CAAoBH,GAApB,EAAwB,UAACI,GAAD,EAAKC,EAAL,EAAY;AAChC,QAAGD,GAAH,EAAQ,MAAMA,GAAN;AACR,QAAIE,GAAG,GAAGD,EAAE,CAACA,EAAH,CAAM,aAAN,CAAV;AACAC,IAAAA,GAAG,CAACC,UAAJ,CAAeO,OAAf,EAAwBK,SAAxB,CAAkCH,KAAlC,EAAwC,UAACZ,GAAD,EAAS;AAC7C,UAAGA,GAAH,EAAQ,MAAMA,GAAN;AACRK,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAL,MAAAA,EAAE,CAACM,KAAH;AACH,KAJD;AAKH,GARD;AASH,CAVD;;AAYA,IAAIS,MAAJ;;AACAnB,QAAQ,CAACW,SAAT,CAAmBS,OAAnB,GAA6B,UAACP,OAAD,EAAa;AACtChB,EAAAA,WAAW,CAACK,OAAZ,CAAoBH,GAApB,EAAwB,UAACI,GAAD,EAAKC,EAAL,EAAY;AAChC,QAAGD,GAAH,EAAQ,MAAMA,GAAN;AACR,QAAIE,GAAG,GAAGD,EAAE,CAACA,EAAH,CAAM,aAAN,CAAV;AACAC,IAAAA,GAAG,CAACC,UAAJ,CAAeO,OAAf,EAAwBQ,IAAxB,CAA6B,EAA7B,EAAiCC,OAAjC,CAAyC,UAACnB,GAAD,EAAKoB,MAAL,EAAgB;AACrD,UAAGpB,GAAH,EAAQ,MAAMA,GAAN;AACRgB,MAAAA,MAAM,GAAGI,MAAT;AACH,KAHD;AAIH,GAPD;AASA,SAAOJ,MAAP;AACH,CAXD;;AAaAK,MAAM,CAACC,OAAP,GAAiBzB,QAAjB",
      "sourceRoot": "/Users/avi/Desktop/Classes/Apr_Node_mrng/oo_nodejs/create-node-app/src/database",
      "sourcesContent": [
        "import mongodb from 'mongodb';\nconst MongoClient = mongodb.MongoClient;\nconst url = \"mongodb://127.0.0.1:27017\";\n\nconst maincall = (myObj) => {\n    MongoClient.connect(url,(err,db) => {\n        if(err) throw err;\n        var dbo = db.db('apr_node_oo')\n        dbo.collection('user').insertOne(myObj,(err) => {\n            if(err) throw err;\n            console.log('data inserted')\n            db.close();\n        })\n    })\n}\nmaincall.prototype.postData = (colName,myObj) => {\n    MongoClient.connect(url,(err,db) => {\n        if(err) throw err;\n        var dbo = db.db('apr_node_oo')\n        dbo.collection(colName).insertOne(myObj,(err) => {\n            if(err) throw err;\n            console.log('data inserted')\n            db.close();\n        })\n    })\n}\n\nmaincall.prototype.putData = (colName,query,myObj) => {\n    MongoClient.connect(url,(err,db) => {\n        if(err) throw err;\n        var dbo = db.db('apr_node_oo')\n        dbo.collection(colName).update(query,myObj,(err) => {\n            if(err) throw err;\n            console.log('data updated')\n            db.close();\n        })\n    })\n}\n\nmaincall.prototype.deleteData = (colName,query) => {\n    MongoClient.connect(url,(err,db) => {\n        if(err) throw err;\n        var dbo = db.db('apr_node_oo')\n        dbo.collection(colName).deleteOne(query,(err) => {\n            if(err) throw err;\n            console.log('data updated')\n            db.close();\n        })\n    })\n}\n\nlet outres;\nmaincall.prototype.getData = (colName) => {\n    MongoClient.connect(url,(err,db) => {\n        if(err) throw err;\n        var dbo = db.db('apr_node_oo')\n        dbo.collection(colName).find({}).toArray((err,result) => {\n            if(err) throw err;\n            outres = result\n        })\n    })\n\n    return outres;\n}\n\nmodule.exports = maincall"
      ]
    },
    "sourceType": "script",
    "mtime": 1555986158173
  }
}