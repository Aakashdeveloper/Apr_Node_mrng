{
  "{\"sourceRoot\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app\",\"filename\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app",
      "filename": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar MongoClient = _mongodb[\"default\"].MongoClient;\nvar app = (0, _express[\"default\"])();\nvar port = 7600;\nvar db;\nvar mongoUrl = 'mongodb://127.0.0.1:27017/';\nvar col_name = 'userlist';\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].json()); //Getting Data\n\napp.get('/user', function (req, res) {\n  db.collection(col_name).find().toArray(function (err, result) {\n    if (err) throw err;\n    res.send(result);\n  });\n}); // Adding Data\n\napp.post('/addUser', function (req, res) {\n  db.collection(col_name).insert(req.body, function (err, result) {\n    if (err) throw err;\n    res.send('data inserted');\n  });\n}); // For user detail\n\napp.post('/find_by_name', function (req, res) {\n  var name = req.body.name;\n  db.collection(col_name).find({\n    name: name\n  }).toArray(function (err, result) {\n    if (err) throw err;\n    res.send(result);\n  });\n}); // Update Data\n\napp.put('/update_user', function (req, res) {\n  db.collection(col_name).findOneAndUpdate({\n    \"name\": req.body.name\n  }, {\n    $set: {\n      name: req.body.name,\n      email: req.body.email,\n      phone: req.body.phone\n    }\n  }, {\n    upsert: true\n  }, function (err, result) {\n    if (err) throw err;\n    res.send(result);\n  });\n}); //Delete Data\n\napp[\"delete\"]('/deleteUser', function (req, res) {\n  db.collection(col_name).findOneAndDelete({\n    \"name\": req.body.name\n  }, function (err, result) {\n    if (err) return res.send(500, err);\n    res.send({\n      \"message\": \"deleted\"\n    });\n  });\n});\napp.get('/', function (req, res) {\n  res.send('<h1>On home page</h1>');\n});\nMongoClient.connect(mongoUrl, function (err, client) {\n  if (err) throw err;\n  db = client.db('apr_dashboard');\n  app.listen(port, function (err) {\n    console.log(\"server is running on port \".concat(port));\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJNb25nb0NsaWVudCIsIm1vbmdvIiwiYXBwIiwicG9ydCIsImRiIiwibW9uZ29VcmwiLCJjb2xfbmFtZSIsInVzZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwiZ2V0IiwicmVxIiwicmVzIiwiY29sbGVjdGlvbiIsImZpbmQiLCJ0b0FycmF5IiwiZXJyIiwicmVzdWx0Iiwic2VuZCIsInBvc3QiLCJpbnNlcnQiLCJib2R5IiwibmFtZSIsInB1dCIsImZpbmRPbmVBbmRVcGRhdGUiLCIkc2V0IiwiZW1haWwiLCJwaG9uZSIsInVwc2VydCIsImZpbmRPbmVBbmREZWxldGUiLCJjb25uZWN0IiwiY2xpZW50IiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFFQTs7OztBQURBLElBQU1BLFdBQVcsR0FBR0Msb0JBQU1ELFdBQTFCO0FBRUEsSUFBTUUsR0FBRyxHQUFHLDBCQUFaO0FBQ0EsSUFBTUMsSUFBSSxHQUFHLElBQWI7QUFDQSxJQUFJQyxFQUFKO0FBQ0EsSUFBTUMsUUFBUSxHQUFHLDRCQUFqQjtBQUNBLElBQU1DLFFBQVEsR0FBRyxVQUFqQjtBQUVBSixHQUFHLENBQUNLLEdBQUosQ0FBUUMsdUJBQVdDLFVBQVgsQ0FBc0I7QUFBQ0MsRUFBQUEsUUFBUSxFQUFDO0FBQVYsQ0FBdEIsQ0FBUjtBQUNBUixHQUFHLENBQUNLLEdBQUosQ0FBUUMsdUJBQVdHLElBQVgsRUFBUixFLENBQ0E7O0FBQ0FULEdBQUcsQ0FBQ1UsR0FBSixDQUFRLE9BQVIsRUFBZ0IsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDekJWLEVBQUFBLEVBQUUsQ0FBQ1csVUFBSCxDQUFjVCxRQUFkLEVBQXdCVSxJQUF4QixHQUErQkMsT0FBL0IsQ0FBdUMsVUFBQ0MsR0FBRCxFQUFLQyxNQUFMLEVBQWdCO0FBQ25ELFFBQUdELEdBQUgsRUFBUSxNQUFNQSxH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QUFBLEVBQUUsR0FBRzZCLE1BQU0sQ0FBQzdCLEVBQVAsQ0FBVSxlQUFWLENBQUw7QUFDQUYsRUFBQUEsR0FBRyxDQUFDZ0MsTUFBSixDQUFXL0IsSUFBWCxFQUFnQixVQUFDZSxHQUFELEVBQU87QUFDbkJpQixJQUFBQSxPQUFPLENBQUNDLEdBQVIscUNBQXlDakMsSUFBekM7QUFDSCxHQUZEO0FBR0gsQ0FORCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXZpL0Rlc2t0b3AvQ2xhc3Nlcy9BcHJfTm9kZV9tcm5nL2Rhc2hib2FyZC9jcmVhdGUtbm9kZS1hcHAvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgbW9uZ28gZnJvbSAnbW9uZ29kYidcbmNvbnN0IE1vbmdvQ2xpZW50ID0gbW9uZ28uTW9uZ29DbGllbnQ7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBwb3J0ID0gNzYwMDtcbmxldCBkYjtcbmNvbnN0IG1vbmdvVXJsID0gJ21vbmdvZGI6Ly8xMjcuMC4wLjE6MjcwMTcvJ1xuY29uc3QgY29sX25hbWUgPSAndXNlcmxpc3QnXG5cbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtleHRlbmRlZDp0cnVlfSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG4vL0dldHRpbmcgRGF0YVxuYXBwLmdldCgnL3VzZXInLChyZXEscmVzKSA9PiB7XG4gICAgZGIuY29sbGVjdGlvbihjb2xfbmFtZSkuZmluZCgpLnRvQXJyYXkoKGVycixyZXN1bHQpID0+IHtcbiAgICAgICAgaWYoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgIHJlcy5zZW5kKHJlc3VsdClcbiAgICB9KVxufSlcblxuLy8gQWRkaW5nIERhdGFcbmFwcC5wb3N0KCcvYWRkVXNlcicsKHJlcSxyZXMpID0+IHtcbiAgICBkYi5jb2xsZWN0aW9uKGNvbF9uYW1lKVxuICAgICAgICAuaW5zZXJ0KHJlcS5ib2R5LChlcnIscmVzdWx0KT0+e1xuICAgICAgICAgICAgaWYoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgICAgICByZXMuc2VuZCgnZGF0YSBpbnNlcnRlZCcpICBcbiAgICAgICAgfSlcbn0pXG4vLyBGb3IgdXNlciBkZXRhaWxcbmFwcC5wb3N0KCcvZmluZF9ieV9uYW1lJywocmVxLHJlcykgPT4ge1xuICAgIGxldCBuYW1lID0gcmVxLmJvZHkubmFtZTtcbiAgICBkYi5jb2xsZWN0aW9uKGNvbF9uYW1lKVxuICAgIC5maW5kKHtuYW1lOm5hbWV9KVxuICAgIC50b0FycmF5KChlcnIscmVzdWx0KSA9PiB7XG4gICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICByZXMuc2VuZChyZXN1bHQpXG4gICAgfSlcbn0pXG5cbi8vIFVwZGF0ZSBEYXRhXG5hcHAucHV0KCcvdXBkYXRlX3VzZXInLChyZXEscmVzKSA9PiB7XG4gICAgZGIuY29sbGVjdGlvbihjb2xfbmFtZSlcbiAgICAgICAgLmZpbmRPbmVBbmRVcGRhdGUoe1wibmFtZVwiOnJlcS5ib2R5Lm5hbWV9LHtcbiAgICAgICAgICAgICRzZXQ6e1xuICAgICAgICAgICAgICAgIG5hbWU6cmVxLmJvZHkubmFtZSxcbiAgICAgICAgICAgICAgICBlbWFpbDpyZXEuYm9keS5lbWFpbCxcbiAgICAgICAgICAgICAgICBwaG9uZTpyZXEuYm9keS5waG9uZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdXBzZXJ0OnRydWVcbiAgICAgICAgICAgIH0sKGVycixyZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICBpZihlcnIpIHRocm93IGVycjtcbiAgICAgICAgICAgICAgICByZXMuc2VuZChyZXN1bHQpXG4gICAgICAgICAgICB9KVxufSlcblxuLy9EZWxldGUgRGF0YVxuYXBwLmRlbGV0ZSgnL2RlbGV0ZVVzZXInLChyZXEscmVzKSA9PiB7XG4gICAgZGIuY29sbGVjdGlvbihjb2xfbmFtZSkuZmluZE9uZUFuZERlbGV0ZSh7XG4gICAgICAgIFwibmFtZVwiOnJlcS5ib2R5Lm5hbWVcbiAgICB9LChlcnIscmVzdWx0KSA9PiB7XG4gICAgICAgIGlmKGVycikgcmV0dXJuIHJlcy5zZW5kKDUwMCxlcnIpXG4gICAgICAgIHJlcy5zZW5kKHtcIm1lc3NhZ2VcIjpcImRlbGV0ZWRcIn0pXG4gICAgfSlcbn0pXG5cblxuXG5hcHAuZ2V0KCcvJywocmVxLHJlcykgPT4ge1xuICAgIHJlcy5zZW5kKCc8aDE+T24gaG9tZSBwYWdlPC9oMT4nKVxufSk7XG5cblxuTW9uZ29DbGllbnQuY29ubmVjdChtb25nb1VybCwoZXJyLGNsaWVudCkgPT57XG4gICAgaWYoZXJyKSB0aHJvdyBlcnI7XG4gICAgZGIgPSBjbGllbnQuZGIoJ2Fwcl9kYXNoYm9hcmQnKTtcbiAgICBhcHAubGlzdGVuKHBvcnQsKGVycik9PntcbiAgICAgICAgY29uc29sZS5sb2coYHNlcnZlciBpcyBydW5uaW5nIG9uIHBvcnQgJHtwb3J0fWApXG4gICAgfSk7XG59KVxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "MongoClient",
        "mongo",
        "app",
        "port",
        "db",
        "mongoUrl",
        "col_name",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "get",
        "req",
        "res",
        "collection",
        "find",
        "toArray",
        "err",
        "result",
        "send",
        "post",
        "insert",
        "body",
        "name",
        "put",
        "findOneAndUpdate",
        "$set",
        "email",
        "phone",
        "upsert",
        "findOneAndDelete",
        "connect",
        "client",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src",
      "sourcesContent": [
        "import express from 'express';\nimport mongo from 'mongodb'\nconst MongoClient = mongo.MongoClient;\nimport bodyParser from 'body-parser';\nconst app = express();\nconst port = 7600;\nlet db;\nconst mongoUrl = 'mongodb://127.0.0.1:27017/'\nconst col_name = 'userlist'\n\napp.use(bodyParser.urlencoded({extended:true}));\napp.use(bodyParser.json());\n//Getting Data\napp.get('/user',(req,res) => {\n    db.collection(col_name).find().toArray((err,result) => {\n        if(err) throw err;\n        res.send(result)\n    })\n})\n\n// Adding Data\napp.post('/addUser',(req,res) => {\n    db.collection(col_name)\n        .insert(req.body,(err,result)=>{\n            if(err) throw err;\n            res.send('data inserted')  \n        })\n})\n// For user detail\napp.post('/find_by_name',(req,res) => {\n    let name = req.body.name;\n    db.collection(col_name)\n    .find({name:name})\n    .toArray((err,result) => {\n        if(err) throw err;\n        res.send(result)\n    })\n})\n\n// Update Data\napp.put('/update_user',(req,res) => {\n    db.collection(col_name)\n        .findOneAndUpdate({\"name\":req.body.name},{\n            $set:{\n                name:req.body.name,\n                email:req.body.email,\n                phone:req.body.phone\n                }\n            },\n            {\n                upsert:true\n            },(err,result) => {\n                if(err) throw err;\n                res.send(result)\n            })\n})\n\n//Delete Data\napp.delete('/deleteUser',(req,res) => {\n    db.collection(col_name).findOneAndDelete({\n        \"name\":req.body.name\n    },(err,result) => {\n        if(err) return res.send(500,err)\n        res.send({\"message\":\"deleted\"})\n    })\n})\n\n\n\napp.get('/',(req,res) => {\n    res.send('<h1>On home page</h1>')\n});\n\n\nMongoClient.connect(mongoUrl,(err,client) =>{\n    if(err) throw err;\n    db = client.db('apr_dashboard');\n    app.listen(port,(err)=>{\n        console.log(`server is running on port ${port}`)\n    });\n})\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555897342627
  },
  "{\"sourceRoot\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app\",\"filename\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src/appwithui.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app",
      "filename": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src/appwithui.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src/appwithui.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src/appwithui.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src",
        "sourceFileName": "appwithui.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar MongoClient = _mongodb[\"default\"].MongoClient;\nvar app = (0, _express[\"default\"])();\nvar port = 7600;\nvar db;\nvar mongoUrl = 'mongodb://127.0.0.1:27017/';\nvar col_name = 'userlist';\napp.use(_express[\"default\"][\"static\"](__dirname + '/public'));\napp.set('view engine', 'ejs');\napp.set('views', './src/views');\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].json()); //Getting Data\n\napp.get('/', function (req, res) {\n  db.collection(col_name).find().toArray(function (err, result) {\n    if (err) throw err;\n    res.render('index', {\n      data: result\n    });\n  });\n}); // Adding Data\n\napp.post('/addUser', function (req, res) {\n  db.collection(col_name).insert(req.body, function (err, result) {\n    if (err) throw err;\n    console.log('data inserted');\n  });\n  res.redirect('/');\n}); // For user detail\n\napp.post('/find_by_name', function (req, res) {\n  var name = req.body.name;\n  db.collection(col_name).find({\n    name: name\n  }).toArray(function (err, result) {\n    if (err) throw err;\n    res.send(result);\n  });\n}); // Update Data\n\napp.put('/update_user', function (req, res) {\n  db.collection(col_name).findOneAndUpdate({\n    \"name\": req.body.name\n  }, {\n    $set: {\n      name: req.body.name,\n      email: req.body.email,\n      phone: req.body.phone\n    }\n  }, {\n    upsert: true\n  }, function (err, result) {\n    if (err) throw err;\n    res.send(result);\n  });\n}); //Delete Data\n\napp[\"delete\"]('/deleteUser', function (req, res) {\n  db.collection(col_name).findOneAndDelete({\n    \"name\": req.body.name\n  }, function (err, result) {\n    if (err) return res.send(500, err);\n    res.send({\n      \"message\": \"deleted\"\n    });\n  });\n});\napp.get('/new', function (req, res) {\n  res.render('admin');\n});\nMongoClient.connect(mongoUrl, function (err, client) {\n  if (err) throw err;\n  db = client.db('apr_dashboard');\n  app.listen(port, function (err) {\n    console.log(\"server is running on port \".concat(port));\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcHdpdGh1aS5qcyJdLCJuYW1lcyI6WyJNb25nb0NsaWVudCIsIm1vbmdvIiwiYXBwIiwicG9ydCIsImRiIiwibW9uZ29VcmwiLCJjb2xfbmFtZSIsInVzZSIsImV4cHJlc3MiLCJfX2Rpcm5hbWUiLCJzZXQiLCJib2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsImdldCIsInJlcSIsInJlcyIsImNvbGxlY3Rpb24iLCJmaW5kIiwidG9BcnJheSIsImVyciIsInJlc3VsdCIsInJlbmRlciIsImRhdGEiLCJwb3N0IiwiaW5zZXJ0IiwiYm9keSIsImNvbnNvbGUiLCJsb2ciLCJyZWRpcmVjdCIsIm5hbWUiLCJzZW5kIiwicHV0IiwiZmluZE9uZUFuZFVwZGF0ZSIsIiRzZXQiLCJlbWFpbCIsInBob25lIiwidXBzZXJ0IiwiZmluZE9uZUFuZERlbGV0ZSIsImNvbm5lY3QiLCJjbGllbnQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBRUE7Ozs7QUFEQSxJQUFNQSxXQUFXLEdBQUdDLG9CQUFNRCxXQUExQjtBQUVBLElBQU1FLEdBQUcsR0FBRywwQkFBWjtBQUNBLElBQU1DLElBQUksR0FBRyxJQUFiO0FBQ0EsSUFBSUMsRUFBSjtBQUNBLElBQU1DLFFBQVEsR0FBRyw0QkFBakI7QUFDQSxJQUFNQyxRQUFRLEdBQUcsVUFBakI7QUFFQUosR0FBRyxDQUFDSyxHQUFKLENBQVFDLDhCQUFlQyxTQUFTLEdBQUMsU0FBekIsQ0FBUjtBQUNBUCxHQUFHLENBQUNRLEdBQUosQ0FBUSxhQUFSLEVBQXNCLEtBQXRCO0FBQ0FSLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLE9BQVIsRUFBaUIsYUFBakI7QUFFQVIsR0FBRyxDQUFDSyxHQUFKLENBQVFJLHVCQUFXQyxVQUFYLENBQXNCO0FBQUNDLEVBQUFBLFFBQVEsRUFBQztBQUFWLENBQXRCLENBQVI7QUFDQVgsR0FBRyxDQUFDSyxHQUFKLENBQVFJLHVCQUFXRyxJQUFYLEVB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LENBQUNlLElBQUosQ0FBUztBQUFDLGlCQUFVO0FBQVgsS0FBVDtBQUNILEdBTEQ7QUFNSCxDQVBEO0FBU0E5QixHQUFHLENBQUNhLEdBQUosQ0FBUSxNQUFSLEVBQWUsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDeEJBLEVBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLE9BQVg7QUFDSCxDQUZEO0FBS0F2QixXQUFXLENBQUN3QyxPQUFaLENBQW9CbkMsUUFBcEIsRUFBNkIsVUFBQ2dCLEdBQUQsRUFBS29CLE1BQUwsRUFBZTtBQUN4QyxNQUFHcEIsR0FBSCxFQUFRLE1BQU1BLEdBQU47QUFDUmpCLEVBQUFBLEVBQUUsR0FBR3FDLE1BQU0sQ0FBQ3JDLEVBQVAsQ0FBVSxlQUFWLENBQUw7QUFDQUYsRUFBQUEsR0FBRyxDQUFDd0MsTUFBSixDQUFXdkMsSUFBWCxFQUFnQixVQUFDa0IsR0FBRCxFQUFPO0FBQ25CTyxJQUFBQSxPQUFPLENBQUNDLEdBQVIscUNBQXlDMUIsSUFBekM7QUFDSCxHQUZEO0FBR0gsQ0FORCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXZpL0Rlc2t0b3AvQ2xhc3Nlcy9BcHJfTm9kZV9tcm5nL2Rhc2hib2FyZC9jcmVhdGUtbm9kZS1hcHAvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgbW9uZ28gZnJvbSAnbW9uZ29kYidcbmNvbnN0IE1vbmdvQ2xpZW50ID0gbW9uZ28uTW9uZ29DbGllbnQ7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBwb3J0ID0gNzYwMDtcbmxldCBkYjtcbmNvbnN0IG1vbmdvVXJsID0gJ21vbmdvZGI6Ly8xMjcuMC4wLjE6MjcwMTcvJ1xuY29uc3QgY29sX25hbWUgPSAndXNlcmxpc3QnXG5cbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoX19kaXJuYW1lKycvcHVibGljJykpO1xuYXBwLnNldCgndmlldyBlbmdpbmUnLCdlanMnKTtcbmFwcC5zZXQoJ3ZpZXdzJywgJy4vc3JjL3ZpZXdzJylcblxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe2V4dGVuZGVkOnRydWV9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbi8vR2V0dGluZyBEYXRhXG5hcHAuZ2V0KCcvJywocmVxLHJlcykgPT4ge1xuICAgIGRiLmNvbGxlY3Rpb24oY29sX25hbWUpLmZpbmQoKS50b0FycmF5KChlcnIscmVzdWx0KSA9PiB7XG4gICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICByZXMucmVuZGVyKCdpbmRleCcse2RhdGE6cmVzdWx0fSlcbiAgICB9KVxufSlcblxuLy8gQWRkaW5nIERhdGFcbmFwcC5wb3N0KCcvYWRkVXNlcicsKHJlcSxyZXMpID0+IHtcbiAgICBkYi5jb2xsZWN0aW9uKGNvbF9uYW1lKVxuICAgICAgICAuaW5zZXJ0KHJlcS5ib2R5LChlcnIscmVzdWx0KT0+e1xuICAgICAgICAgICAgaWYoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnZGF0YSBpbnNlcnRlZCcpICBcbiAgICAgICAgfSlcbiAgICByZXMucmVkaXJlY3QoJy8nKTtcbn0pXG4vLyBGb3IgdXNlciBkZXRhaWxcbmFwcC5wb3N0KCcvZmluZF9ieV9uYW1lJywocmVxLHJlcykgPT4ge1xuICAgIGxldCBuYW1lID0gcmVxLmJvZHkubmFtZTtcbiAgICBkYi5jb2xsZWN0aW9uKGNvbF9uYW1lKVxuICAgIC5maW5kKHtuYW1lOm5hbWV9KVxuICAgIC50b0FycmF5KChlcnIscmVzdWx0KSA9PiB7XG4gICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICByZXMuc2VuZChyZXN1bHQpXG4gICAgfSlcbn0pXG5cbi8vIFVwZGF0ZSBEYXRhXG5hcHAucHV0KCcvdXBkYXRlX3VzZXInLChyZXEscmVzKSA9PiB7XG4gICAgZGIuY29sbGVjdGlvbihjb2xfbmFtZSlcbiAgICAgICAgLmZpbmRPbmVBbmRVcGRhdGUoe1wibmFtZVwiOnJlcS5ib2R5Lm5hbWV9LHtcbiAgICAgICAgICAgICRzZXQ6e1xuICAgICAgICAgICAgICAgIG5hbWU6cmVxLmJvZHkubmFtZSxcbiAgICAgICAgICAgICAgICBlbWFpbDpyZXEuYm9keS5lbWFpbCxcbiAgICAgICAgICAgICAgICBwaG9uZTpyZXEuYm9keS5waG9uZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdXBzZXJ0OnRydWVcbiAgICAgICAgICAgIH0sKGVycixyZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICBpZihlcnIpIHRocm93IGVycjtcbiAgICAgICAgICAgICAgICByZXMuc2VuZChyZXN1bHQpXG4gICAgICAgICAgICB9KVxufSlcblxuLy9EZWxldGUgRGF0YVxuYXBwLmRlbGV0ZSgnL2RlbGV0ZVVzZXInLChyZXEscmVzKSA9PiB7XG4gICAgZGIuY29sbGVjdGlvbihjb2xfbmFtZSkuZmluZE9uZUFuZERlbGV0ZSh7XG4gICAgICAgIFwibmFtZVwiOnJlcS5ib2R5Lm5hbWVcbiAgICB9LChlcnIscmVzdWx0KSA9PiB7XG4gICAgICAgIGlmKGVycikgcmV0dXJuIHJlcy5zZW5kKDUwMCxlcnIpXG4gICAgICAgIHJlcy5zZW5kKHtcIm1lc3NhZ2VcIjpcImRlbGV0ZWRcIn0pXG4gICAgfSlcbn0pXG5cbmFwcC5nZXQoJy9uZXcnLChyZXEscmVzKSA9PiB7XG4gICAgcmVzLnJlbmRlcignYWRtaW4nKVxufSlcblxuXG5Nb25nb0NsaWVudC5jb25uZWN0KG1vbmdvVXJsLChlcnIsY2xpZW50KSA9PntcbiAgICBpZihlcnIpIHRocm93IGVycjtcbiAgICBkYiA9IGNsaWVudC5kYignYXByX2Rhc2hib2FyZCcpO1xuICAgIGFwcC5saXN0ZW4ocG9ydCwoZXJyKT0+e1xuICAgICAgICBjb25zb2xlLmxvZyhgc2VydmVyIGlzIHJ1bm5pbmcgb24gcG9ydCAke3BvcnR9YClcbiAgICB9KTtcbn0pXG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "appwithui.js"
      ],
      "names": [
        "MongoClient",
        "mongo",
        "app",
        "port",
        "db",
        "mongoUrl",
        "col_name",
        "use",
        "express",
        "__dirname",
        "set",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "get",
        "req",
        "res",
        "collection",
        "find",
        "toArray",
        "err",
        "result",
        "render",
        "data",
        "post",
        "insert",
        "body",
        "console",
        "log",
        "redirect",
        "name",
        "send",
        "put",
        "findOneAndUpdate",
        "$set",
        "email",
        "phone",
        "upsert",
        "findOneAndDelete",
        "connect",
        "client",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/avi/Desktop/Classes/Apr_Node_mrng/dashboard/create-node-app/src",
      "sourcesContent": [
        "import express from 'express';\nimport mongo from 'mongodb'\nconst MongoClient = mongo.MongoClient;\nimport bodyParser from 'body-parser';\nconst app = express();\nconst port = 7600;\nlet db;\nconst mongoUrl = 'mongodb://127.0.0.1:27017/'\nconst col_name = 'userlist'\n\napp.use(express.static(__dirname+'/public'));\napp.set('view engine','ejs');\napp.set('views', './src/views')\n\napp.use(bodyParser.urlencoded({extended:true}));\napp.use(bodyParser.json());\n//Getting Data\napp.get('/',(req,res) => {\n    db.collection(col_name).find().toArray((err,result) => {\n        if(err) throw err;\n        res.render('index',{data:result})\n    })\n})\n\n// Adding Data\napp.post('/addUser',(req,res) => {\n    db.collection(col_name)\n        .insert(req.body,(err,result)=>{\n            if(err) throw err;\n            console.log('data inserted')  \n        })\n    res.redirect('/');\n})\n// For user detail\napp.post('/find_by_name',(req,res) => {\n    let name = req.body.name;\n    db.collection(col_name)\n    .find({name:name})\n    .toArray((err,result) => {\n        if(err) throw err;\n        res.send(result)\n    })\n})\n\n// Update Data\napp.put('/update_user',(req,res) => {\n    db.collection(col_name)\n        .findOneAndUpdate({\"name\":req.body.name},{\n            $set:{\n                name:req.body.name,\n                email:req.body.email,\n                phone:req.body.phone\n                }\n            },\n            {\n                upsert:true\n            },(err,result) => {\n                if(err) throw err;\n                res.send(result)\n            })\n})\n\n//Delete Data\napp.delete('/deleteUser',(req,res) => {\n    db.collection(col_name).findOneAndDelete({\n        \"name\":req.body.name\n    },(err,result) => {\n        if(err) return res.send(500,err)\n        res.send({\"message\":\"deleted\"})\n    })\n})\n\napp.get('/new',(req,res) => {\n    res.render('admin')\n})\n\n\nMongoClient.connect(mongoUrl,(err,client) =>{\n    if(err) throw err;\n    db = client.db('apr_dashboard');\n    app.listen(port,(err)=>{\n        console.log(`server is running on port ${port}`)\n    });\n})\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555984837534
  }
}