pacakge.json

json
javascript object notation
[
    {
        "name":"john",
        "class":"node"
    },
    {
        "name":"andy",
        "class":"UI"
    }
]
//////
>node -v
v10.15.3
>npm -v
6.4.1

///////Generate pacakge.json///////////

Step1 >
npm init

step2>
package name: (learnpackage) learnapp
version: (1.0.0) 
description: this is app to leran package
entry point: (index.js) 
test command: 
git repository: 
keywords: node angular react npm
author: nareshit
license: (ISC) 

step3>
yes

//////////Install Package////
npm install <pacakgename>
npm i <pakagename>

npm install zone.js@0.9.0


//////To install in one go////
npm install


//
callback
is function that will fire once it get a response

///
create node server
> node server.js
> localhost:3400

//
to start
>>npm start
for dev
>>npm run dev


//////
>> Local package:-- local to folder (npm install body-parser)
>> Global Package:-- in system drive (npm install -g nodemon)
mac / linux
> sudo npm install -g nodemon
window
> run cmd as admin
> npm install -g nodemon

/*
var => we can redeclare and reassgign
let => we cannot redeclare but reassgin
const=> nor redeclare nor reassgin

var a =10

var a
a =10


Es6 Ecma Script
Es5


writefile=>override the content
appendFile=> add the content

//Es5
function add(a,b){
    return a+b
}

//Es6
var add = (a,b) => {
    return a+b
}

(a,b) => {
    return a+b
}


=> transpile
=>babel


//Es5
var a = 10
var b = "my age is "+a

//Es6
var a = 10
var b = `my age is ${a}`


// CRUD
create read update delete
post   get   put   delete


// template engine
ejs
handlebars
swig
vash
jade


npm i @aakashdeveloper/create-node-app

//
function add(a,b){
    return a+b
}

add(1,2)


for public api 
https://github.com/Aakashdeveloper/public-apis

WeatherApi:http://api.openweathermap.org/data/2.5/forecast/daily?id=5308655&appid=fbf712a5a83d7305c3cda4ca8fe7ef29&cnt=5
NasaApi:https://api.nasa.gov/planetary/apod?api_key=ri0EZkle2DPanZWtyS8oZFgC4coub86CDtV5OiYV&date=2019-04-05

sno |   eng   |  hindi
----------------------
1   |    80   |
----------------------
2   |         |   80


[
    {
        sno:1
        eng:80
    },
    {
        sno:2
        hindi:80
    }
]

C:\Program Files\MongoDB\Server\4.0\bin
port 27017

database == database
table == collections
row == document

To See all databases
> show dbs

To Use database
> use <datbasename>

To All collections
> show collections

To Find/Get data
> db.<collectionName>.find()
to see formatted data
> db.<collectionName>.find().pretty()
> db.movies.find().pretty()

Find with condition
db.movies.find({rate:4.5,name:"Black Panther"}).pretty()

create database
> use apr_batch

db.movies.find({},{imageUrl:0}).pretty()
db.movies.find({},{_id:0,name:1,rate:1}).pretty()
 db.movies.find().skip(1).sort({name:1}).limit(2).pretty()

db.mydata.insert(

{
	"_id" : "myobjectid1",
	"name" : "GOT",
	"language" : "English",
	"rate" : 3.5,
	"type" : "Horror Thriller",
	"imageUrl" : "https://pre00.deviantart.net/5d3b/th/pre/f/2017/313/2/b/mission_impossible__dark_directive_teaser_poster_by_themadbutcher-dbt9wav.png"
}
)
db.mydata.distinct("name")

// update
db.mydata.update({name:"GOT"},{rate:4.6})
db.mydata.update({name:"Deadpool"},{$set:{name:"Deadpool",rate:4.9}},{upsert:true})
db.mydata.findOneAndUpdate({name:"GOT"},{$set:{rate:4.7}})

db.mydata.insert({
	"_id" : "myobjectid2",
	"name" : "GOT",
	"language" : "English",
	"rate" : 4.7,
	"type" : "Horror Thriller",
	"imageUrl" : "https://pre00.deviantart.net/5d3b/th/pre/f/2017/313/2/b/mission_impossible__dark_directive_teaser_poster_by_themadbutcher-dbt9wav.png"
})

https://docs.mongodb.com/manual/reference/method/db.collection.insert/


////
CRUD
create => Post
read   => GET
update => PUT
delete => DELETE


//JWT 
x-access-token


npm install -g @aakashdeveloper/create-node-app